{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\unicafe\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Statistics = props => {\n  const all = props.good + props.neutral + props.bad;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), \"good \", props.good, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 24\n    }, this), \"neutral \", props.neutral, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 30\n    }, this), \"bad \", props.bad, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 22\n    }, this), \"all \", all, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 16\n    }, this), \"average \", (props.good - props.bad) / all, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 43\n    }, this), \"positive \", 100 * props.good / all, \" %\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setGood(good + 1),\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setNeutral(neutral + 1),\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setBad(bad + 1),\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), \"Statistics(good, neutral, bad)\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","Statistics","props","all","good","neutral","bad","App","setGood","setNeutral","setBad"],"sources":["C:/temp/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props) => {\n  const all =props.good + props.neutral + props.bad\n  \n  return (\n    <div>\n      <h1>statistics</h1>\n\n      good {props.good}<br></br>\n      neutral {props.neutral}<br></br>\n      bad {props.bad}<br></br>\n      all {all}<br></br>\n      average {(props.good-props.bad)/all}<br></br>\n      positive {100*props.good/all} %\n\n    </div>\n\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  \n  \n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      \n      <button onClick={() => setGood(good + 1)}> \n        good\n      </button>\n      <button onClick={() => setNeutral(neutral + 1)}> \n        neutral\n      </button>\n      <button onClick={() => setBad(bad + 1)}> \n        bad\n      </button>\n\n      Statistics(good, neutral, bad)\n\n      \n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA;AAEhC,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,MAAMC,GAAG,GAAED,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACG,OAAO,GAAGH,KAAK,CAACI,GAAG;EAEjD,oBACE;IAAA,wBACE;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,SAEd,EAACJ,KAAK,CAACE,IAAI,eAAC;MAAA;MAAA;MAAA;IAAA,QAAS,YAClB,EAACF,KAAK,CAACG,OAAO,eAAC;MAAA;MAAA;MAAA;IAAA,QAAS,QAC5B,EAACH,KAAK,CAACI,GAAG,eAAC;MAAA;MAAA;MAAA;IAAA,QAAS,QACpB,EAACH,GAAG,eAAC;MAAA;MAAA;MAAA;IAAA,QAAS,YACV,EAAC,CAACD,KAAK,CAACE,IAAI,GAACF,KAAK,CAACI,GAAG,IAAEH,GAAG,eAAC;MAAA;MAAA;MAAA;IAAA,QAAS,aACpC,EAAC,GAAG,GAACD,KAAK,CAACE,IAAI,GAACD,GAAG,EAAC,IAE/B;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAGV,CAAC;AAAA,KAjBKF,UAAU;AAmBhB,MAAMM,GAAG,GAAG,MAAM;EAAA;EAChB;EACA,MAAM,CAACH,IAAI,EAAEI,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACK,OAAO,EAAEI,UAAU,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACM,GAAG,EAAEI,MAAM,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAIjC,oBACE;IAAA,wBACE;MAAA,UAAI;IAAa;MAAA;MAAA;MAAA;IAAA,QAAK,eAEtB;MAAQ,OAAO,EAAE,MAAMQ,OAAO,CAACJ,IAAI,GAAG,CAAC,CAAE;MAAA,UAAC;IAE1C;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMK,UAAU,CAACJ,OAAO,GAAG,CAAC,CAAE;MAAA,UAAC;IAEhD;MAAA;MAAA;MAAA;IAAA,QAAS,eACT;MAAQ,OAAO,EAAE,MAAMK,MAAM,CAACJ,GAAG,GAAG,CAAC,CAAE;MAAA,UAAC;IAExC;MAAA;MAAA;MAAA;IAAA,QAAS,kCAKX;EAAA;IAAA;IAAA;IAAA;EAAA,QAAM;AAEV,CAAC;AAAA,GA3BKC,GAAG;AAAA,MAAHA,GAAG;AA6BT,eAAeA,GAAG;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}