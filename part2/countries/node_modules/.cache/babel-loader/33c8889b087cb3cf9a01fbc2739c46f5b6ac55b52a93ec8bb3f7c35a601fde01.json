{"ast":null,"code":"var _jsxFileName = \"C:\\\\temp\\\\countries\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api_key = process.env.REACT_APP_API_KEY;\nconst App = () => {\n  _s();\n  const [newSearch, setNewSearch] = useState('');\n  const [countries, setCountries] = useState([]);\n  const [weather, setWeather] = useState([]);\n  const [wind, setWind] = useState([]);\n  const [icon, setIcon] = useState([]);\n  const searchResults = newSearch ? countries.filter(country => country.name.official.toLowerCase().includes(newSearch.toLowerCase())) : countries;\n  useEffect(() => {\n    if (newSearch) {\n      axios.get(`https://restcountries.com/v3.1/all`).then(response => {\n        setCountries(response.data);\n      });\n    }\n  }, [newSearch]);\n  const handleSearchChange = event => {\n    setNewSearch(event.target.value);\n  };\n  const getWeather = _ref => {\n    let {\n      country\n    } = _ref;\n    const lat = country.capitalInfo.latlng[0];\n    const lon = country.capitalInfo.latlng[1];\n    axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric`).then(response => {\n      setWeather(response.data.main.temp);\n      setWind(response.data.wind.speed);\n      setIcon(response.data.weather[0].icon);\n    });\n  };\n  const ShowOne = _ref2 => {\n    let {\n      country\n    } = _ref2;\n    getWeather({\n      country\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: country.name.official\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", country.capital, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 37\n        }, this), \"area \", country.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(country.languages).map(key => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: country.languages[key]\n        }, country.name.official, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 56\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: country.flags['png']\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Weather in \", country.capital]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"temperature \", weather, \" Celsius\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://openweathermap.org/img/wn/${icon}@2x.png`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"wind \", wind, \" m/s\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"find countries\", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newSearch,\n          onChange: handleSearchChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }, this), searchResults.length === 1 ? /*#__PURE__*/_jsxDEV(ShowOne, {\n      country: searchResults[0]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : searchResults.length < 11 ? /*#__PURE__*/_jsxDEV(\"dl\", {\n      style: {\n        listStyle: 'none'\n      },\n      children: searchResults.map(result => /*#__PURE__*/_jsxDEV(\"dt\", {\n        children: [result.name.official, \" \", ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => setNewSearch(result.name.official),\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), \" \"]\n      }, result.name.official, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }, this) : newSearch !== '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lTDF2BUrTyZDhM25r4wKbOzrE3E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","api_key","process","env","REACT_APP_API_KEY","App","_s","newSearch","setNewSearch","countries","setCountries","weather","setWeather","wind","setWind","icon","setIcon","searchResults","filter","country","name","official","toLowerCase","includes","get","then","response","data","handleSearchChange","event","target","value","getWeather","_ref","lat","capitalInfo","latlng","lon","main","temp","speed","ShowOne","_ref2","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","area","Object","keys","languages","map","key","src","flags","onChange","length","style","listStyle","result","type","onClick","_c","$RefreshReg$"],"sources":["C:/temp/countries/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport axios from 'axios'\n\nconst api_key = process.env.REACT_APP_API_KEY\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst App = () => {\n\n  const [newSearch, setNewSearch] = useState('')\n  const [countries, setCountries] = useState([])\n  const [weather, setWeather] = useState([])\n  const [wind, setWind] = useState([])\nconst [icon, setIcon] = useState([])\n\nconst searchResults = newSearch\n? countries.filter(country => country.name.official.toLowerCase().includes(newSearch.toLowerCase()))\n: countries\n\n  useEffect(() => {\n    if (newSearch) {\n      axios\n        .get(`https://restcountries.com/v3.1/all`)\n        .then(response => {\n          setCountries(response.data)\n    })\n  }}, [newSearch])\n\n  const handleSearchChange = (event) => {\n    setNewSearch(event.target.value)\n  }\n\n  const getWeather = ({country}) => {\n    const lat = country.capitalInfo.latlng[0]\n    const lon = country.capitalInfo.latlng[1]\n    \n     \n    axios\n      .get(`https://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${lon}&appid=${api_key}&units=metric`)\n      .then(response => {\n        setWeather(response.data.main.temp)\n        setWind(response.data.wind.speed)\n        setIcon(response.data.weather[0].icon)\n      })\n  }\n\n  const ShowOne = ({country}) => {\n    getWeather({country})\n    return (\n      <div>\n        <h1>{country.name.official}</h1>\n        <p>capital {country.capital}<br></br>\n          area {country.area}</p>\n        <h3>\n          languages:\n        </h3>\n          <ul>\n            {Object.keys(country.languages).map(key => <li key={country.name.official}>{country.languages[key]}</li>)}\n          </ul>\n        <img src={country.flags['png']} />\n        <h2>Weather in {country.capital}</h2>\n        <p>temperature {weather} Celsius</p>\n        <img src={`http://openweathermap.org/img/wn/${icon}@2x.png`} />\n        <p>wind {wind} m/s</p>\n      </div>  \n    )\n  }\n\n\n  return (\n    <div>\n    <form>\n      <div>\n        find countries \n        <input\n          value={newSearch}\n          onChange={handleSearchChange}\n        />\n      </div>\n    </form>\n    {(searchResults.length === 1)\n      ? <ShowOne country={searchResults[0]} />\n      : (searchResults.length < 11)\n        ? <dl style={{listStyle: 'none'}}>\n          {searchResults.map(result => \n          <dt key={result.name.official}>{result.name.official} {' '}\n          <button type='button' onClick={() => setNewSearch(result.name.official) }>show</button> </dt>\n          )}\n          </dl>\n        : (newSearch !== '')\n          ? <p>Too many matches, specify another filter</p>\n          : <p></p>\n    }\n    </div>\n  )\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}